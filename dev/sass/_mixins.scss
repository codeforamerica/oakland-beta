// Clearfix
//
// Clears floats via mixin (avoid using as a class).

@mixin clearfix {
  &:before {
    display: table;
    content: "";
  }

  &:after {
    display: table;
    clear: both;
    content: "";
  }
}

// Creates a linear gradient background, from top to bottom.
//
// $start - The color hex at the top.
// $end   - The color hex at the bottom.

@mixin gradient($start: #fafafa, $end: #eaeaea) {
  @warn "Gradient mixin is deprecated.";
  // scss-lint:disable VendorPrefix
  background-color: $end;
  // FF 3.6+
  background-image: -moz-linear-gradient($start, $end);
  // Safari 5.1+, Chrome 10+
  background-image: -webkit-linear-gradient($start, $end);
  background-image: linear-gradient($start, $end);
  background-repeat: repeat-x;
}

// Text hiding for image based text replacement.
// Higher performance than -9999px because it only renders
// the size of the actual text, not a full 9999px box.

@mixin hide-text() {
  overflow: hidden;
  text-indent: 100%;
  white-space: nowrap;
}

// Octicon bootstrap
//
// Quickly load the typography requirements for Octicons icon font.

@mixin icon-bootstrap($size) {
  font: normal normal #{$size}/1 "octicons";
  display: inline-block;
  text-decoration: none;
  -webkit-font-smoothing: antialiased;
}

// Color theme mixins
//
// Create color rules for specific child elements of site sections
// Add color themes to _variables.scss

@mixin theme($name, $color) {
  $primary: $color;
  $darkened: darken($color, 10%);

  .#{$name} {
    a {
      color: $primary;

      &:hover,
      &:focus {
        color: $primary;
      }

      &:active {
        color: $darkened;
      }
    }

    .subheader {
      background-color: $primary;
    }

    .menu-item {
      color: $primary;

      &:hover,
      &:focus {
        color: $primary;

        &:before {
          background-color: $primary;
        }
      }

      &:active {
        color: $darkened;

        &:before {
          background-color: $darkened;
        }
      }
    }
  }
}

// Iterates thru our $themes color map and creates styles for child elements of our site subsections

@each $theme, $color in $themes {
  @include theme($theme, $color);
}